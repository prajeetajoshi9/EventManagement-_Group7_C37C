/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.CustomerViewEvent;
import javax.swing.JOptionPane;


/**
 *
 * @author sumitshah
 */
public class Customerdashboard extends javax.swing.JFrame {

    /**
     * Creates new form Customerdashboard
     */
    public Customerdashboard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        jToggleButton7 = new javax.swing.JToggleButton();
        jToggleButton8 = new javax.swing.JToggleButton();
        jToggleButton9 = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screenshot 2025-05-22 at 20.45.48.png"))); // NOI18N
        jLabel7.setText("jLabel7");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 600, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/WhatsApp Image 2025-05-22 at 9.27.29 PM.jpeg"))); // NOI18N
        jLabel12.setText("jLabel12");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/WhatsApp Image 2025-05-22 at 9.27.29 PM.jpeg"))); // NOI18N
        jLabel14.setText("jLabel14");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Home");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 39, -1, -1));

        jLabel2.setText("About Us");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 39, -1, -1));

        jLabel3.setText("Services");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 39, -1, -1));

        jLabel4.setText("Contact Us");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 39, -1, -1));

        jLabel5.setText("Events");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 39, -1, -1));

        jLabel6.setText("More");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(517, 39, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 204, 102));
        jButton1.setText("Sign Out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(601, 36, -1, -1));

        jToggleButton1.setText("Personal Information");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PersonalInformation(evt);
            }
        });
        getContentPane().add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 106, -1, -1));

        jToggleButton2.setText("Search Event");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 141, 148, -1));

        jToggleButton3.setText("Create Event");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 176, 148, -1));

        jToggleButton4.setText("Edit Event");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 217, 148, -1));

        jToggleButton5.setText("View Event");
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 258, 148, -1));

        jToggleButton6.setText("Delete Event");
        getContentPane().add(jToggleButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 293, 148, -1));

        jToggleButton7.setText("Book Ticket");
        jToggleButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 328, 148, -1));

        jToggleButton8.setText("Ticket Details");
        jToggleButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 363, 148, -1));

        jToggleButton9.setText("Payment Information");
        getContentPane().add(jToggleButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 398, -1, -1));

        jLabel8.setText("Our Team");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 464, -1, -1));

        jLabel9.setText("Support");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 464, -1, -1));

        jLabel10.setText("Customer Review");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 464, 130, -1));

        jLabel11.setText("Blogs");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(559, 464, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 690, 70));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screenshot 2025-05-22 at 20.45.48.png"))); // NOI18N
        jLabel13.setText("jLabel13");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 100));

        jPanel3.setBackground(new java.awt.Color(255, 204, 102));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/WhatsApp Image 2025-05-22 at 9.27.29 PM.jpeg"))); // NOI18N
        jLabel15.setText("jLabel15");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 97, 690, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PersonalInformation(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PersonalInformation
        // TODO add your handling code here:
         // Open the target frame
    CustomerPersonalInformation personalInfo = new CustomerPersonalInformation();
    personalInfo.setVisible(true);

    // Close the current frame
    this.dispose();
        
      
    }//GEN-LAST:event_PersonalInformation

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // Test database connection and show events for debugging
        testDatabaseConnection();
        showAvailableEvents();
        
        String searchTerm = JOptionPane.showInputDialog(this, "Enter event title or type to search:");
        
        if (searchTerm != null && !searchTerm.trim().isEmpty()) {
            // Here you would implement the search logic
            // For now, show a message
            JOptionPane.showMessageDialog(this, "Searching for: " + searchTerm + "\n\nThis feature will be implemented to search through events.");
            
            // TODO: Implement actual search functionality
            // You can create a search results form or show results in a dialog
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton8ActionPerformed
        // Fetch ticket details from database using eventId
        String eventIdStr = JOptionPane.showInputDialog(this, "Enter Event ID to view ticket details:");
        
        if (eventIdStr != null && !eventIdStr.trim().isEmpty()) {
            try {
                int eventId = Integer.parseInt(eventIdStr.trim());
                Dao.CustomerViewEventDAO dao = new Dao.CustomerViewEventDAO();
                Model.Event event = dao.getEventById(eventId);
                if (event != null) {
                    StringBuilder details = new StringBuilder();
                    details.append("Event ID: ").append(event.getEventId()).append("\n");
                    details.append("Title: ").append(event.getTitle()).append("\n");
                    details.append("Ticket Price: NRs. ").append(event.getTicketPrice()).append("\n");
                    details.append("Guests: ").append(event.getGuests()).append("\n");
                    details.append("Privacy: ").append(event.getPrivacy()).append("\n");
                    details.append("Status: ").append(event.getStatus()).append("\n");
                    // You can add more ticket-related fields if available
                    JOptionPane.showMessageDialog(this, details.toString(), "Ticket Details", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No event/ticket found for Event ID: " + eventId);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid Event ID (number).");
            }
        }
    }//GEN-LAST:event_jToggleButton8ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
        // Close the Customer Dashboard frame
    this.dispose(); 
        CreateEvent controller = null;
    
    // Open the Create Event frame
    CreateEvent createEventFrame = new CreateEvent(controller);
    createEventFrame.setVisible(true);
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Close the dashboard
    this.dispose();

    // Open the login form
    Customer_Login login = new Customer_Login();
    login.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jToggleButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton7ActionPerformed
        // Open the Book Ticket form
        
    }//GEN-LAST:event_jToggleButton7ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // Enhanced Edit Event functionality
        int choice = JOptionPane.showConfirmDialog(this, 
            "Would you like to see available events first?", 
            "Edit Event", JOptionPane.YES_NO_OPTION);
        
        if (choice == JOptionPane.YES_OPTION) {
            showAvailableEvents();
        }
        
        String eventIdStr = JOptionPane.showInputDialog(this, "Enter Event ID to edit:");
        
        if (eventIdStr != null && !eventIdStr.trim().isEmpty()) {
            try {
                int eventId = Integer.parseInt(eventIdStr.trim());
                
                // First verify the event exists
                Dao.CustomerViewEventDAO dao = new Dao.CustomerViewEventDAO();
                Model.Event event = dao.getEventById(eventId);
                
                if (event != null) {
                    // Open CustomerEditEvent with the specific event ID
                    CustomerEditEvent editEvent = new CustomerEditEvent(eventId);
                    editEvent.setVisible(true);
                    editEvent.setLocationRelativeTo(null); // center on screen
                    this.dispose(); // close current form
                } else {
                    // Provide more detailed information about why event wasn't found
                    StringBuilder message = new StringBuilder();
                    message.append("No event found with ID: ").append(eventId).append("\n\n");
                    message.append("Possible reasons:\n");
                    message.append("1. Event ID doesn't exist\n");
                    message.append("2. Database connection issue\n");
                    message.append("3. No events in database\n\n");
                    message.append("Try:\n");
                    message.append("- Check the event list first\n");
                    message.append("- Create an event first\n");
                    message.append("- Verify database connection");
                    
                    JOptionPane.showMessageDialog(this, message.toString(), "Event Not Found", JOptionPane.WARNING_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid Event ID (number).");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error loading event: " + e.getMessage() + "\n\nPlease check your database connection.");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    // Helper method to show available events
    private void showAvailableEvents() {
        try {
            Dao.CustomerViewEventDAO dao = new Dao.CustomerViewEventDAO();
            java.util.List<Model.Event> events = dao.getAllEvents();
            
            if (events == null) {
                JOptionPane.showMessageDialog(this, "Database connection failed. Please check your database connection.");
                return;
            }
            
            if (events.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No events found in the database.\n\nThis could mean:\n1. No events have been created yet\n2. Database is empty\n3. Database connection issue\n\nTry creating an event first using 'Create Event'.");
                return;
            }
            
            StringBuilder eventList = new StringBuilder();
            eventList.append("Available Events (").append(events.size()).append(" total):\n\n");
            
            for (Model.Event event : events) {
                eventList.append("ID: ").append(event.getEventId())
                        .append(" | Title: ").append(event.getTitle() != null ? event.getTitle() : "N/A")
                        .append(" | Date: ").append(event.getDate() != null ? event.getDate() : "N/A")
                        .append(" | Status: ").append(event.getStatus() != null ? event.getStatus() : "N/A")
                        .append("\n");
            }
            
            JOptionPane.showMessageDialog(this, eventList.toString(), "Available Events", JOptionPane.INFORMATION_MESSAGE);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading events: " + e.getMessage() + "\n\nPlease check:\n1. Database connection\n2. Database server is running\n3. Database credentials are correct");
            e.printStackTrace();
        }
    }

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        // Show dialog to get event ID
        String eventIdStr = JOptionPane.showInputDialog(this, "Enter Event ID to view:");
        
        if (eventIdStr != null && !eventIdStr.trim().isEmpty()) {
            try {
                int eventId = Integer.parseInt(eventIdStr.trim());
                CustomerEventViewer view = new CustomerEventViewer(eventId);
                view.setVisible(true);
                view.setLocationRelativeTo(null);
                this.dispose();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid Event ID (number).");
            }
        }
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jToggleButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton6ActionPerformed
        // Show available events first
        showAvailableEvents();
        
        String eventIdStr = JOptionPane.showInputDialog(this, "Enter Event ID to delete:");
        
        if (eventIdStr != null && !eventIdStr.trim().isEmpty()) {
            try {
                int eventId = Integer.parseInt(eventIdStr.trim());
                
                // First verify the event exists
                Dao.CustomerViewEventDAO dao = new Dao.CustomerViewEventDAO();
                Model.Event event = dao.getEventById(eventId);
                
                if (event != null) {
                    // Show event details and ask for confirmation
                    StringBuilder message = new StringBuilder();
                    message.append("Are you sure you want to delete this event?\n\n");
                    message.append("Event ID: ").append(event.getEventId()).append("\n");
                    message.append("Title: ").append(event.getTitle() != null ? event.getTitle() : "N/A").append("\n");
                    message.append("Type: ").append(event.getType() != null ? event.getType() : "N/A").append("\n");
                    message.append("Date: ").append(event.getDate() != null ? event.getDate() : "N/A").append("\n");
                    message.append("Venue: ").append(event.getVenue() != null ? event.getVenue() : "N/A").append("\n\n");
                    message.append("This action cannot be undone!");
                    
                    int confirm = JOptionPane.showConfirmDialog(this, message.toString(), 
                        "Confirm Delete", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    
                    if (confirm == JOptionPane.YES_OPTION) {
                        // TODO: Implement actual delete functionality
                        // For now, show a message that delete is not implemented
                        JOptionPane.showMessageDialog(this, 
                            "Delete functionality will be implemented soon.\n\n" +
                            "Event ID: " + eventId + " would be deleted from the database.",
                            "Delete Event", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No event found with ID: " + eventId);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid Event ID (number).");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error loading event: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jToggleButton6ActionPerformed

    private void jToggleButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton9ActionPerformed
        // Show payment information
        StringBuilder paymentInfo = new StringBuilder();
        paymentInfo.append("=== PAYMENT INFORMATION ===\n\n");
        paymentInfo.append("Supported Payment Methods:\n");
        paymentInfo.append("• Khalti - Digital Wallet\n");
        paymentInfo.append("• Esewa - Digital Payment\n\n");
        paymentInfo.append("Payment Process:\n");
        paymentInfo.append("1. Select your event\n");
        paymentInfo.append("2. Choose number of tickets\n");
        paymentInfo.append("3. Select payment method\n");
        paymentInfo.append("4. Complete payment\n");
        paymentInfo.append("5. Receive confirmation\n\n");
        paymentInfo.append("Security:\n");
        paymentInfo.append("• All payments are secure\n");
        paymentInfo.append("• SSL encryption enabled\n");
        paymentInfo.append("• No card details stored\n\n");
        paymentInfo.append("For support, contact:\n");
        paymentInfo.append("Email: support@eventmanagement.com\n");
        paymentInfo.append("Phone: +977-1-2345678");
        
        JOptionPane.showMessageDialog(this, paymentInfo.toString(), 
            "Payment Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jToggleButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customerdashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customerdashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customerdashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customerdashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Customerdashboard().setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JToggleButton jToggleButton8;
    private javax.swing.JToggleButton jToggleButton9;
    // End of variables declaration//GEN-END:variables

   private int getSelectedEventId() {
    String eventIdText = JOptionPane.showInputDialog(this, "Enter Event ID:");
    if (eventIdText == null || eventIdText.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter an Event ID.");
        return -1;
    }
    try {
        return Integer.parseInt(eventIdText.trim());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid Event ID format. Please enter a number.");
        return -1;
    }
}
   

    private static class jTable1 {

        private static int getSelectedRow() {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        private static Object getValueAt(int selectedRow, int i) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public jTable1() {
        }
    }

    // Helper method to test database connection
    private void testDatabaseConnection() {
        try {
            Database.DbConnection.getConnection();
            JOptionPane.showMessageDialog(this, "Database connection successful!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Database connection failed: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
