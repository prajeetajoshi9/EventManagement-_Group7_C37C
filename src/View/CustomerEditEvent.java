/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;


import Controller.CustomerEditEventController;
import java.awt.Color;
import View.CreateEvent;  // or whatever your CreateEvent class is
import View.CustomerEventViewer;  // Import for CustomerEventViewer
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import Dao.CustomerEditEventControllerDAO;
import Model.Event;

/**
 *
 * @author prajeetajoshi
 */
public class CustomerEditEvent extends javax.swing.JFrame {

    /**
     * Creates new form CustomerEditEvent
     */
    public CustomerEditEvent() {
        initComponents();
    }

    /**
     * Creates new form CustomerEditEvent with event ID for editing
     */
    public CustomerEditEvent(int eventId) {
        initComponents();
        this.currentEventId = eventId;
        loadEventForEditing(eventId);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        EventText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TypeText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TimeText = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        DescriptionText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        GuestText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        BudgetText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel7.setText("Description:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Screenshot 2025-05-22 at 20.45.48.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel2.setText("Edit Event");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(331, 331, 331)
                .addComponent(jLabel2)
                .addContainerGap(381, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel2))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 918, -1));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel3.setText("Event Title:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 130, 96, -1));

        EventText.setForeground(new java.awt.Color(224, 224, 224));
        EventText.setText("Provide name for the event (e.g. Happy Halloween)");
        EventText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EventTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                EventTextFocusLost(evt);
            }
        });
        getContentPane().add(EventText, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 124, 569, 40));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel4.setText("Event Type:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 188, -1, -1));

        TypeText.setForeground(new java.awt.Color(224, 224, 224));
        TypeText.setText("Choose Type");
        TypeText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TypeTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TypeTextFocusLost(evt);
            }
        });
        getContentPane().add(TypeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 182, 242, 40));

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel9.setText("Date:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(504, 194, -1, -1));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel5.setText("Time:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 247, -1, -1));

        TimeText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "6:00 AM", "7:00 AM", "8:00 AM", "9:00 AM", "10:00 AM", "11:00 AM", "12:00 PM", "1:00 PM", "2:00 PM", "3:00 PM" }));
        getContentPane().add(TimeText, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, 242, 40));

        jLabel6.setText("_");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(482, 271, -1, -1));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "6:00 AM", "7:00 AM", "8:00 AM", "9:00 AM", "10:00 AM", "11:00 AM", "12:00 PM", "1:00 PM", "2:00 PM", "3:00 PM" }));
        getContentPane().add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(553, 240, 246, 40));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel8.setText("Description:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 298, -1, -1));

        DescriptionText.setForeground(new java.awt.Color(224, 224, 224));
        DescriptionText.setText("Provide short description of event");
        DescriptionText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DescriptionTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DescriptionTextFocusLost(evt);
            }
        });
        getContentPane().add(DescriptionText, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 298, 569, 50));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel10.setText("Number of Guests:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, -1, -1));

        GuestText.setForeground(new java.awt.Color(224, 224, 224));
        GuestText.setText("Provide total attendees");
        GuestText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                GuestTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                GuestTextFocusLost(evt);
            }
        });
        GuestText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuestTextActionPerformed(evt);
            }
        });
        getContentPane().add(GuestText, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, 246, 40));

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel11.setText("Venue:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 370, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "\t1.\tSolti Grand Party Palace, Kalanki", "\t2.\tRudra Banquet & Events, Banasthali", "\t3.\tUtsav Banquet, Tripureshwor", "\t4.\tRoyal Empire Party Palace, Baneshwor", "\t5.\tDurbar Banquet, Lazimpat", "\t6.\tSubha Griha Banquet, Chabahil", "\t7.\tGolden Palace Banquet, Gwarko", "\t8.\tParadise Party Venue, Koteshwor", "\t9.\tEverest Party Palace, Gongabu", "\t10.\tDream Garden Banquet, Bhaktapur" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 360, 245, 40));

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel12.setText("Budget:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, -1, -1));

        BudgetText.setForeground(new java.awt.Color(224, 224, 224));
        BudgetText.setText("NRs.");
        BudgetText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BudgetTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BudgetTextFocusLost(evt);
            }
        });
        getContentPane().add(BudgetText, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, 246, 40));

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel13.setText("Event Privacy: ");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 430, -1, -1));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Public");
        getContentPane().add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 430, -1, -1));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Private");
        getContentPane().add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 430, -1, -1));

        jButton3.setBackground(new java.awt.Color(38, 78, 201));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Confirm");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 560, 100, 40));

        jButton1.setBackground(new java.awt.Color(38, 78, 201));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 560, 100, 40));

        jButton2.setBackground(new java.awt.Color(38, 78, 201));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("View");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 560, 100, 40));

        jLabel15.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel15.setText("Set  Ticket Price: ");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 480, -1, -1));
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 190, 250, 40));

        jScrollPane1.setViewportView(jTextPane1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 470, 150, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EventTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EventTextFocusGained
        // TODO add your handling code here:
        if (EventText.getText().equals("Provide name for the event (e.g. Happy Halloween)")){
            EventText.setText("");
            EventText.setForeground(Color.BLACK); 

        }
    }//GEN-LAST:event_EventTextFocusGained

    private void EventTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EventTextFocusLost
        // TODO add your handling code here:
        if(EventText.getText().isEmpty()){
            EventText.setText("Provide name for the event (e.g. Happy Halloween)");
            EventText.setForeground(new java.awt.Color(216,216,216));

        }
    }//GEN-LAST:event_EventTextFocusLost

    private void TypeTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TypeTextFocusGained
        // TODO add your handling code here:
        if (TypeText.getText().equals("Choose Type")){
            TypeText.setText("");
            TypeText.setForeground(Color.BLACK);

        }

    }//GEN-LAST:event_TypeTextFocusGained

    private void TypeTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TypeTextFocusLost
        // TODO add your handling code here:
        if( TypeText.getText().isEmpty()){
            TypeText.setText("Choose Type");
            TypeText.setForeground(new java.awt.Color(216,216,216));

        }
    }//GEN-LAST:event_TypeTextFocusLost

    private void DescriptionTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DescriptionTextFocusGained
        // TODO add your handling code here:
        if (DescriptionText.getText().equals("Provide short description of event")){
            DescriptionText.setText("");
            DescriptionText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_DescriptionTextFocusGained

    private void DescriptionTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DescriptionTextFocusLost
        // TODO add your handling code here:
        if(DescriptionText.getText().isEmpty()){
            DescriptionText.setText("Provide short description of event");
            DescriptionText.setForeground(new java.awt.Color(216,216,216));

        }
    }//GEN-LAST:event_DescriptionTextFocusLost

    private void GuestTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GuestTextFocusGained
        // TODO add your handling code here:
        if (GuestText.getText().equals("Provide total attendees")){
            GuestText.setText("");
            GuestText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_GuestTextFocusGained

    private void GuestTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_GuestTextFocusLost
        // TODO add your handling code here:
        if(GuestText.getText().isEmpty()){
            GuestText.setText("Provide total attendees");
            GuestText.setForeground(new java.awt.Color(216,216,216));

        }
    }//GEN-LAST:event_GuestTextFocusLost

    private void GuestTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuestTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GuestTextActionPerformed

    private void BudgetTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BudgetTextFocusGained
        // TODO add your handling code here:
        if (BudgetText.getText().equals("NRs.")){
            BudgetText.setText("");
            BudgetText.setForeground(Color.BLACK);

        }
    }//GEN-LAST:event_BudgetTextFocusGained

    private void BudgetTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BudgetTextFocusLost
        // TODO add your handling code here:
        if(BudgetText.getText().isEmpty()){
            BudgetText.setText("NRs.");
            BudgetText.setForeground(new java.awt.Color(216,216,216));

        }
    }//GEN-LAST:event_BudgetTextFocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            // Create controller and handle the update
            CustomerEditEventController controller = new CustomerEditEventController(this);
            
            // The controller will handle the update through the updateEvent() method
            // which is called when the button is clicked
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error updating event: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Open CustomerEventViewer to view event details
        String eventIdStr = JOptionPane.showInputDialog(this, "Enter Event ID to view:");
        
        if (eventIdStr != null && !eventIdStr.trim().isEmpty()) {
            try {
                int eventId = Integer.parseInt(eventIdStr.trim());
                
                // Open CustomerEventViewer with the specific event ID
                CustomerEventViewer viewer = new CustomerEventViewer(eventId);
                viewer.setVisible(true);
                viewer.setLocationRelativeTo(null); // center on screen
                
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid Event ID (number).");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error opening event viewer: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                                                
    CreateEvent createEvent = new CreateEvent(); // Replace with your CreateEvent class name
    createEvent.setVisible(true);
    this.dispose(); // Or this.setVisible(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
          JComboBox comboBox = (JComboBox) evt.getSource();
    String selectedItem = (String) comboBox.getSelectedItem();

    // Default party palace
    String eventPlace = "";

    eventPlace = switch (selectedItem) {
            case "Wedding Ceremony" -> "Solti Grand Party Palace, Kalanki";
            case "Birthday Bash" -> "Rudra Banquet & Events, Banasthali";
            case "Corporate Meetup" -> "Utsav Banquet, Tripureshwor";
            case "Engagement Party" -> "Royal Empire Party Palace, Baneshwor";
            case "Farewell Program" -> "Durbar Banquet, Lazimpat";
            case "Anniversary Celebration" -> "Subha Griha Banquet, Chabahil";
            case "Graduation Party" -> "Golden Palace Banquet, Gwarko";
            case "Baby Shower" -> "Paradise Party Venue, Koteshwor";
            case "Reception" -> "Everest Party Palace, Gongabu";
            case "Cultural Program" -> "Dream Garden Banquet, Bhaktapur";
            default -> "Venue to be announced";
        };

    System.out.println("Selected Event: " + selectedItem);
    System.out.println("Event Place: " + eventPlace);

    JOptionPane.showMessageDialog(null, "You selected: " + selectedItem +
                                          "\nEvent Place: " + eventPlace);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerEditEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerEditEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerEditEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerEditEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerEditEvent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BudgetText;
    private javax.swing.JTextField DescriptionText;
    private javax.swing.JTextField EventText;
    private javax.swing.JTextField GuestText;
    private javax.swing.JComboBox<String> TimeText;
    private javax.swing.JTextField TypeText;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    // Add a field to store the event ID
    private int currentEventId = 0;

    public Object getUpdateButton() {
        return jButton3; // Return the Confirm button
    }

    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }

    public String getTicketPriceText() {
        return jTextPane1.getText().replace("NRs.", "").trim();
    }

    public String getDescriptionText() {
        return DescriptionText.getText();
    }

    public String getStatusSelection() {
        // Default status for editing
        return "Pending";
    }

    public String getPrivacySelection() {
        if (jRadioButton1.isSelected()) {
            return "Public";
        } else if (jRadioButton2.isSelected()) {
            return "Private";
        }
        return "Public"; // Default
    }

    public String getGuestsText() {
        return GuestText.getText();
    }

    public String getBudgetText() {
        return BudgetText.getText().replace("NRs.", "").trim();
    }

    public String getSelectedTime() {
        return (String) TimeText.getSelectedItem();
    }

    public String getVenueSelection() {
        return (String) jComboBox1.getSelectedItem();
    }

    public Date getSelectedDate() {
        return jDateChooser1.getDate();
    }

    public String getTypeSelection() {
        return TypeText.getText();
    }

    public String getTitleText() {
        return EventText.getText();
    }

    public int getEventId() {
        return currentEventId;
    }

    // Method to set the event ID when loading an event for editing
    public void setEventId(int eventId) {
        this.currentEventId = eventId;
    }

    // Method to load event data into the form
    public void loadEventData(String title, String type, String venue, Date date, String time, 
                             String description, int guests, double budget, String privacy, double ticketPrice) {
        EventText.setText(title);
        TypeText.setText(type);
        jComboBox1.setSelectedItem(venue);
        jDateChooser1.setDate(date);
        TimeText.setSelectedItem(time);
        DescriptionText.setText(description);
        GuestText.setText(String.valueOf(guests));
        BudgetText.setText("NRs. " + budget);
        jTextPane1.setText("NRs. " + ticketPrice);
        
        if ("Public".equals(privacy)) {
            jRadioButton1.setSelected(true);
        } else if ("Private".equals(privacy)) {
            jRadioButton2.setSelected(true);
        }
    }

    // Method to load event from database for editing
    private void loadEventForEditing(int eventId) {
        try {
            CustomerEditEventControllerDAO dao = new CustomerEditEventControllerDAO();
            Event event = dao.getEventById(eventId);
            
            if (event != null) {
                loadEventData(
                    event.getTitle(),
                    event.getType(),
                    event.getVenue(),
                    event.getDate(),
                    event.getTime(),
                    event.getDescription(),
                    event.getGuests(),
                    event.getBudget(),
                    event.getPrivacy(),
                    event.getTicketPrice()
                );
                JOptionPane.showMessageDialog(this, "Event loaded successfully!\nEvent ID: " + eventId + "\nTitle: " + event.getTitle());
            } else {
                JOptionPane.showMessageDialog(this, "Event with ID " + eventId + " not found in the database.\nPlease check the Event ID and try again.");
                clearForm();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading event: " + e.getMessage() + "\nPlease check your database connection.");
            e.printStackTrace();
            clearForm();
        }
    }
    
    // Method to clear the form
    private void clearForm() {
        EventText.setText("Provide name for the event (e.g. Happy Halloween)");
        TypeText.setText("Choose Type");
        DescriptionText.setText("Provide short description of event");
        GuestText.setText("Provide total attendees");
        BudgetText.setText("NRs.");
        jTextPane1.setText("NRs.");
        jDateChooser1.setDate(null);
        TimeText.setSelectedIndex(0);
        jComboBox1.setSelectedIndex(0);
        jRadioButton1.setSelected(true);
        currentEventId = 0;
    }

    // Method to validate form data
    public boolean validateForm() {
        if (EventText.getText().trim().isEmpty() || EventText.getText().equals("Provide name for the event (e.g. Happy Halloween)")) {
            JOptionPane.showMessageDialog(this, "Please enter an event title.");
            return false;
        }
        
        if (TypeText.getText().trim().isEmpty() || TypeText.getText().equals("Choose Type")) {
            JOptionPane.showMessageDialog(this, "Please enter an event type.");
            return false;
        }
        
        if (jDateChooser1.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Please select a date.");
            return false;
        }
        
        if (DescriptionText.getText().trim().isEmpty() || DescriptionText.getText().equals("Provide short description of event")) {
            JOptionPane.showMessageDialog(this, "Please enter an event description.");
            return false;
        }
        
        try {
            int guests = Integer.parseInt(GuestText.getText().trim());
            if (guests <= 0) {
                JOptionPane.showMessageDialog(this, "Please enter a valid number of guests (greater than 0).");
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid number of guests.");
            return false;
        }
        
        try {
            double budget = Double.parseDouble(BudgetText.getText().replace("NRs.", "").trim());
            if (budget < 0) {
                JOptionPane.showMessageDialog(this, "Please enter a valid budget (non-negative).");
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid budget.");
            return false;
        }
        
        if (currentEventId == 0) {
            JOptionPane.showMessageDialog(this, "Please load an event first before updating.");
            return false;
        }
        
        return true;
    }
}
